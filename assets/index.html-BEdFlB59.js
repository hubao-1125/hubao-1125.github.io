import{_ as t,c as a,f as o,o as r}from"./app-DAa-7Y-M.js";const c={};function n(p,e){return r(),a("div",null,e[0]||(e[0]=[o('<p>面向对象，是一个老生常谈的话题。</p><h1 id="封装" tabindex="-1"><a class="header-anchor" href="#封装"><span>封装</span></a></h1><p>封装，就是把一个类里的属性和行为封装起来，对外提供公共的调用方法。调用者和外部，无需关心内容如何实现的，只需要调用方法，返回想要的数据即可。</p><h1 id="继承" tabindex="-1"><a class="header-anchor" href="#继承"><span>继承</span></a></h1><p>继承，就是子类继承父类的属性和方法，并重写父类的方法。子类可以拥有父类没有的方法，也可以拥有父类有的方法。</p><p>子类和父类是之间是<code>is a</code>的关系。</p><p>比如：我有个 <code>Father</code> 类，还有个 <code>Son</code> 类。<code>Son</code> 类继承了 <code>Father</code> 类。</p><p>那么，他们之间的关系可以说<code>Son</code>是<code>Father</code>的子类（孩子），也可以说<code>Father</code>是<code>Son</code>的父类（父亲）。</p><h1 id="多态" tabindex="-1"><a class="header-anchor" href="#多态"><span>多态</span></a></h1><p>多态，就是指一个对象在不同的情况下，可以有不同的形态。</p>',10)]))}const d=t(c,[["render",n],["__file","index.html.vue"]]),s=JSON.parse(`{"path":"/doc/Java/SE/173535/","title":"面向对象","lang":"zh-CN","frontmatter":{"title":"面向对象","createTime":"2025/03/21 17:35:35","permalink":"/doc/Java/SE/173535/","copyright":{"author":{"name":"Hu Bao","url":"https://github.com/hubao-1125"}},"tags":["Java","SE"],"description":"面向对象，是一个老生常谈的话题。 封装 封装，就是把一个类里的属性和行为封装起来，对外提供公共的调用方法。调用者和外部，无需关心内容如何实现的，只需要调用方法，返回想要的数据即可。 继承 继承，就是子类继承父类的属性和方法，并重写父类的方法。子类可以拥有父类没有的方法，也可以拥有父类有的方法。 子类和父类是之间是is a的关系。 比如：我有个 Fath...","head":[["meta",{"property":"og:url","content":"https://hubao-1125.github.io/doc/Java/SE/173535/"}],["meta",{"property":"og:site_name","content":"Hu bao's blog"}],["meta",{"property":"og:title","content":"面向对象"}],["meta",{"property":"og:description","content":"面向对象，是一个老生常谈的话题。 封装 封装，就是把一个类里的属性和行为封装起来，对外提供公共的调用方法。调用者和外部，无需关心内容如何实现的，只需要调用方法，返回想要的数据即可。 继承 继承，就是子类继承父类的属性和方法，并重写父类的方法。子类可以拥有父类没有的方法，也可以拥有父类有的方法。 子类和父类是之间是is a的关系。 比如：我有个 Fath..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-21T09:57:31.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SE"}],["meta",{"property":"article:modified_time","content":"2025-03-21T09:57:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-21T09:57:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.81,"words":244},"git":{"updatedTime":1742551051000,"contributors":[{"name":"hubao-1125","username":"hubao-1125","email":"19473254+hubao-1125@users.noreply.github.com","commits":1,"avatar":"https://avatars.githubusercontent.com/hubao-1125?v=4","url":"https://github.com/hubao-1125"}]},"autoDesc":true,"filePathRelative":"doc/Java/SE/面向对象.md","categoryList":[{"id":"9a09b4","sort":10000,"name":"doc"},{"id":"8f1aa6","sort":10001,"name":"Java"},{"id":"f9782b","sort":10002,"name":"SE"}]}`);export{d as comp,s as data};
