import{_ as a,c as n,f as p,o as l}from"./app-DAa-7Y-M.js";const e={};function c(o,s){return l(),n("div",null,s[0]||(s[0]=[p(`<p>最近在重新整理支付项目代码，要做的抽象一点儿，毕竟之前被某位大哥整了一个支付类4k+代码。想用多态，结果瞎比，全忘了，重新回忆一下。</p><p>父类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki material-theme-ocean vp-code"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Data</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">class</span><span class="space"> </span><span style="color:#FFCB6B;">Father</span><span class="space"> </span><span style="color:#C792EA;">implements</span><span class="space"> </span><span style="color:#FFCB6B;">Serializable</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">String</span><span class="space"> </span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki material-theme-ocean vp-code"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Data</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ToString</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">callSuper</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#89DDFF;">true)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">class</span><span class="space"> </span><span style="color:#FFCB6B;">Son</span><span class="space"> </span><span style="color:#C792EA;">extends</span><span class="space"> </span><span style="color:#FFCB6B;">Father</span><span class="space"> </span><span style="color:#C792EA;">implements</span><span class="space"> </span><span style="color:#FFCB6B;">Serializable</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">private</span><span class="space"> </span><span style="color:#C792EA;">String</span><span class="space"> </span><span style="color:#BABED8;">nickName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Builder</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builderMethodName</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">childBuilder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span class="space"> </span><span style="color:#FFCB6B;">toBuilder</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#89DDFF;">true)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#82AAFF;">Son</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span class="space"> </span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">,</span><span class="space"> </span><span style="color:#C792EA;">String</span><span class="space"> </span><span style="color:#BABED8;font-style:italic;">nickName</span><span style="color:#89DDFF;">)</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#BABED8;">super</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">nickName</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#BABED8;">nickName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试类：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki material-theme-ocean vp-code"><code><span class="line"><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">class</span><span class="space"> </span><span style="color:#FFCB6B;">Test</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">static</span><span class="space"> </span><span style="color:#C792EA;">void</span><span class="space"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span class="space"> </span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">static</span><span class="space"> </span><span style="color:#C792EA;">void</span><span class="space"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Father</span><span class="space"> </span><span style="color:#BABED8;font-style:italic;">father</span><span style="color:#89DDFF;">)</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">Son</span><span class="space"> </span><span style="color:#BABED8;">son</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">Son</span><span style="color:#89DDFF;">)</span><span class="space"> </span><span style="color:#BABED8;">father</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#BABED8;">System</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toJSONString</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">son</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">public</span><span class="space"> </span><span style="color:#C792EA;">static</span><span class="space"> </span><span style="color:#C792EA;">Father</span><span class="space"> </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">()</span><span class="space"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#C792EA;">Son</span><span class="space"> </span><span style="color:#BABED8;">son</span><span class="space"> </span><span style="color:#89DDFF;">=</span><span class="space"> </span><span style="color:#BABED8;">Son</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">childBuilder</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">son</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">nickName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sonNick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span class="space"> </span><span style="color:#BABED8;">son</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码意思是调用<code>get</code>方法，虽然返回是父类。但是<code>get</code>方法里面最终返回的是子类。</p><p>调用<code>test</code>方法，入参虽然是父类，但是传入的是子类。子类强转父类是可以转的。</p><p>然后<code>lombok</code>贼拉好用，但是，<code>lombok</code>的父类与子类的处理比较麻烦。</p><p>需要在子类自定义<code>builder</code>，因为，如果父类有<code>@Builder</code>的话，子类不能有<code>@Builder</code>注解，否则会报错的。但是，子类的<code>builder</code>方法是拿不到父类的字段的。需要在子类写个构造方法，上面加上注解<code>@Builder(builderMethodName = &quot;childBuilder&quot;, toBuilder = true)</code></p><p><code>builderMethodName</code>是方法名，你起什么方法名，子类的<code>build</code>方法就是什么名。</p><p><code>toBuilder</code>是决定子类能否在<code>build</code>方法里引用父类字段的，且父类字段必须是<code>public</code>不能是<code>private</code>的，否则还是调用不到。</p>`,13)]))}const r=a(e,[["render",c],["__file","index.html.vue"]]),i=JSON.parse(`{"path":"/doc/Java/SE/184426/","title":"Java多态与Lombok的关系-1","lang":"zh-CN","frontmatter":{"title":"Java多态与Lombok的关系-1","createTime":"2025/01/30 18:44:26","permalink":"/doc/Java/SE/184426/","copyright":{"author":{"name":"Hu Bao","url":"https://github.com/hubao-1125"}},"tags":["Java"],"description":"最近在重新整理支付项目代码，要做的抽象一点儿，毕竟之前被某位大哥整了一个支付类4k+代码。想用多态，结果瞎比，全忘了，重新回忆一下。 父类： 子类： 测试类： 上面的代码意思是调用get方法，虽然返回是父类。但是get方法里面最终返回的是子类。 调用test方法，入参虽然是父类，但是传入的是子类。子类强转父类是可以转的。 然后lombok贼拉好用，但是...","head":[["meta",{"property":"og:url","content":"https://hubao-1125.github.io/doc/Java/SE/184426/"}],["meta",{"property":"og:site_name","content":"Hu bao's blog"}],["meta",{"property":"og:title","content":"Java多态与Lombok的关系-1"}],["meta",{"property":"og:description","content":"最近在重新整理支付项目代码，要做的抽象一点儿，毕竟之前被某位大哥整了一个支付类4k+代码。想用多态，结果瞎比，全忘了，重新回忆一下。 父类： 子类： 测试类： 上面的代码意思是调用get方法，虽然返回是父类。但是get方法里面最终返回的是子类。 调用test方法，入参虽然是父类，但是传入的是子类。子类强转父类是可以转的。 然后lombok贼拉好用，但是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-31T14:47:30.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2025-01-31T14:47:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java多态与Lombok的关系-1\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-31T14:47:30.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.34,"words":402},"git":{"updatedTime":1738334850000,"contributors":[{"name":"hubao-1125","username":"hubao-1125","email":"19473254+hubao-1125@users.noreply.github.com","commits":3,"avatar":"https://avatars.githubusercontent.com/hubao-1125?v=4","url":"https://github.com/hubao-1125"}]},"autoDesc":true,"filePathRelative":"doc/Java/SE/Java多态与Lombok的关系-1.md","categoryList":[{"id":"9a09b4","sort":10000,"name":"doc"},{"id":"8f1aa6","sort":10001,"name":"Java"},{"id":"f9782b","sort":10002,"name":"SE"}]}`);export{r as comp,i as data};
